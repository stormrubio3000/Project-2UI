@model ANightsTaleUI.Models.ViewModels.Inventorypass


@{
    ViewData["Title"] = "GetInventory";
}

<header>
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=IM+Fell+DW+Pica+SC" />

</header>

<style>
body { background-image: url("https://wallpapercave.com/wp/Mji0eJV.jpg"); background-repeat: no-repeat }


    h1, p , .back {
        font-family: "IM Fell DW Pica SC";
        color: gold;
    }

    .links {
        font-family: "IM Fell DW Pica SC";
        color: gold;
        font-weight: bold;
    }

    .table {
        float: none;
        margin: 0 auto;
        background-color: lightgray;
        border-style: double;
        border-color: goldenrod
    }

    .tag-name, .data-name {
        font-family: "IM Fell DW Pica SC";
    }

    .btn-create {
        background-color: forestgreen;
        font-family: "IM Fell DW Pica SC";
        margin-bottom: 10px
    }
</style>

<h1>Characters Inventory</h1>

<p>
    @Html.ActionLink("Add to Inventory", "CreateInventory", new { id = Model.charID }, new { @class = "links" })
</p>
<table class="table">
    <thead>
        <tr>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].Name)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].Description)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].Type)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].AC)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].NumDice)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].NumSides)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].Mods)
            </th>
            <th class="tag-name">
                @Html.DisplayNameFor(model => model.items[0].Effects)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.items)
        {
            <tr>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.AC)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.NumDice)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.NumSides)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.Mods)
                </td>
                <td class="data-name">
                    @Html.DisplayFor(modelItem => item.Effects)
                </td>
            </tr>
        }
    </tbody>
</table>
